name: SyncScribe Cluster Control

on:
  pull_request:
  workflow_dispatch:
    inputs:
      action:
        description: "Make target to run"
        required: true
        type: choice
        options:
          - online-all
          - offline-all

permissions:
  contents: read
  id-token: write

env:
  # Set via GitHub Repository Variables
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  K8S_NAMESPACE: syncscribe
  USE_GKE_GCLOUD_AUTH_PLUGIN: "True"

jobs:
  control:
    runs-on: ubuntu-latest
    # Skip for forked PRs where secrets are unavailable
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Authenticate to Google Cloud via Workload Identity Federation
      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}
          access_token_lifetime: 3600s
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Verify cluster access
        run: |
          kubectl version --client
          kubectl get ns
          kubectl -n "$K8S_NAMESPACE" get deploy || true

      - name: Determine action
        id: decide
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "target=${{ inputs.action }}" >> "$GITHUB_OUTPUT"
          else
            # Default for PRs
            echo "target=online-all" >> "$GITHUB_OUTPUT"
          fi

      - name: Run make target
        run: |
          echo "Running: make ${{ steps.decide.outputs.target }}"
          make ${{ steps.decide.outputs.target }}

      - name: Show resources
        if: always()
        run: |
          kubectl -n "$K8S_NAMESPACE" get deploy,svc,ingress,pods -o wide || true

